package com.donut.wx82b43071f528fe3f;

import android.content.Context;
import android.text.TextUtils;
import com.yanzhenjie.andserver.error.ParamMissingException;
import com.yanzhenjie.andserver.error.ParamValidateException;
import com.yanzhenjie.andserver.framework.MessageConverter;
import com.yanzhenjie.andserver.framework.cross.CrossOrigin;
import com.yanzhenjie.andserver.framework.handler.MappingHandler;
import com.yanzhenjie.andserver.framework.mapping.Addition;
import com.yanzhenjie.andserver.framework.mapping.Mapping;
import com.yanzhenjie.andserver.framework.view.ObjectView;
import com.yanzhenjie.andserver.framework.view.View;
import com.yanzhenjie.andserver.http.HttpMethod;
import com.yanzhenjie.andserver.http.HttpRequest;
import com.yanzhenjie.andserver.http.HttpResponse;
import com.yanzhenjie.andserver.http.RequestBody;
import com.yanzhenjie.andserver.http.multipart.MultipartRequest;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.Throwable;
import java.util.Map;

/**
 * This file was generated by AndServer automatically and you should NOT edit it.
 */
public final class ServerControllerAddDeviceHandler extends MappingHandler {
  private Object mHost;

  public ServerControllerAddDeviceHandler(Object host, Mapping mapping, Addition addition,
      CrossOrigin crossOrigin) {
    super(host, mapping, addition, crossOrigin);
    this.mHost = host;
  }

  @Override
  protected View onHandle(HttpRequest request, HttpResponse response) throws Throwable {
    Context context = (Context)request.getAttribute(HttpRequest.ANDROID_CONTEXT);
    String httpPath = request.getPath();
    HttpMethod httpMethod = request.getMethod();

    Object converterObj = request.getAttribute(HttpRequest.HTTP_MESSAGE_CONVERTER);
    MessageConverter converter = null;
    if (converterObj != null && converterObj instanceof MessageConverter) {
      converter = (MessageConverter)converterObj;
    }

    MultipartRequest multiRequest = null;
    if (request instanceof MultipartRequest) {
      multiRequest = (MultipartRequest) request;
    }

    RequestBody requestBody = null;
    if (httpMethod.allowBody()) {
      requestBody = request.getBody();
    }

    Map<String, String> pathMap = getPathVariable(httpPath);

    /** ---------- Building Parameters ---------- **/ 

    String param0Str = request.getParameter("deviceCode");
    if (TextUtils.isEmpty(param0Str)) {
      throw new ParamMissingException("deviceCode");
    }
    String param0 = null;
    try {
      param0 = String.valueOf(param0Str);
    } catch (Throwable e) {
      throw new ParamValidateException(e);
    }

    String param1Str = request.getParameter("deviceType");
    if (TextUtils.isEmpty(param1Str)) {
      throw new ParamMissingException("deviceType");
    }
    String param1 = null;
    try {
      param1 = String.valueOf(param1Str);
    } catch (Throwable e) {
      throw new ParamValidateException(e);
    }

    String param2Str = request.getParameter("ip");
    if (TextUtils.isEmpty(param2Str)) {
      throw new ParamMissingException("ip");
    }
    String param2 = null;
    try {
      param2 = String.valueOf(param2Str);
    } catch (Throwable e) {
      throw new ParamValidateException(e);
    }

    String param3Str = request.getParameter("deviceVersion");
    if (TextUtils.isEmpty(param3Str)) {
      param3Str = "";
    }
    String param3 = null;
    try {
      param3 = String.valueOf(param3Str);
    } catch (Throwable e) {
      throw new ParamValidateException(e);
    }
    Object o = ((ServerController)mHost).addDevice(param0, param1, param2, param3);
    return new ObjectView(true, o);
  }
}
